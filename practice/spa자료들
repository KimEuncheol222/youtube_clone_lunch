
<!-- 
SPA를 구현하는 주요 요소는 다음과 같습니다:

1. 라우팅: URL에 따라 적절한 뷰를 렌더링하는 것을 담당합니다.

2. 뷰(View) 업데이트: 상태에 따라 필요한 뷰를 렌더링하고 화면을 업데이트합니다.

3. 상태 관리: 사용자의 상태를 저장하고 관리합니다.

4. 이벤트 처리: 사용자의 상호작용에 따라 적절한 동작을 수행합니다.

5. 서버 통신: 필요한 데이터를 서버에서 비동기적으로 로드합니다. -->

<!DOCTYPE html>
<html>
<head>
  <title>Vanilla JS SPA</title>
</head>
<body>
  <header>
    <nav>
      <ul>
        <li><a href="#home">Home</a></li>
        <li><a href="#about">About</a></li>
        <li><a href="#contact">Contact</a></li>
      </ul>
    </nav>
  </header>

  <main id="content">
    <!-- 여기에 동적으로 렌더링할 콘텐츠가 들어갈 자리 -->
  </main>

  <script>
    // 라우팅
    function renderContent(route) {
      const contentElement = document.getElementById('content');

      switch (route) {
        case '#home':
          contentElement.innerHTML = '<h1>Welcome to Home Page</h1>';
          break;
        case '#about':
          contentElement.innerHTML = '<h1>About Us</h1><p>We are a company that...</p>';
          break;
        case '#contact':
          contentElement.innerHTML = '<h1>Contact Us</h1><p>Email: contact@example.com</p>';
          break;
        default:
          contentElement.innerHTML = '<h1>Page Not Found</h1>';
          break;
      }
    }

    // 초기 페이지 렌더링
    renderContent(window.location.hash);

    // 이벤트 처리: 네비게이션 링크 클릭 시 라우팅
    const navLinks = document.querySelectorAll('nav a');
    navLinks.forEach(link => {
      link.addEventListener('click', event => {
        event.preventDefault();
        const route = event.target.getAttribute('href');
        window.location.hash = route;
        renderContent(route);
      });
    });

    // 해시 변경 시 라우팅
    window.addEventListener('hashchange', () => {
      const route = window.location.hash;
      renderContent(route);
    });
  </script>
</body>
</html>